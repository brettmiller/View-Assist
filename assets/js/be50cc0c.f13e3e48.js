"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[7058],{6420:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var n=s(4848),t=s(8453);const r={title:"Extended Device Controls"},o=void 0,a={id:"community-contributions/cc-sentences/extended-device-controls",title:"Extended Device Controls",description:"Open your Home Assistant instance and show the blueprint import dialog with a specific blueprint pre-filled.",source:"@site/docs/community-contributions/cc-sentences/extended-device-controls.md",sourceDirName:"community-contributions/cc-sentences",slug:"/community-contributions/cc-sentences/extended-device-controls",permalink:"/View-Assist/docs/community-contributions/cc-sentences/extended-device-controls",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Extended Device Controls"},sidebar:"tutorialSidebar",previous:{title:"Community Contributions Sentences",permalink:"/View-Assist/docs/community-contributions/cc-sentences/"},next:{title:"Community Contributions Views",permalink:"/View-Assist/docs/community-contributions/cc-views/"}},c={},l=[{value:"Summary of Optional Features:",id:"summary-of-optional-features",level:2},{value:"Features Requiring No Changes to Stock View Assist Device Configuration:",id:"features-requiring-no-changes-to-stock-view-assist-device-configuration",level:2},{value:"Features Requiring Configuration Changes:",id:"features-requiring-configuration-changes",level:2},{value:"Features Requiring Separate Media Players:",id:"features-requiring-separate-media-players",level:2},{value:"Recommended Media Players:",id:"recommended-media-players",level:2},{value:"Changelog",id:"changelog",level:2}];function d(e){const i={a:"a",admonition:"admonition",blockquote:"blockquote",br:"br",code:"code",h2:"h2",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components},{Details:s}=i;return s||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.p,{children:(0,n.jsx)(i.a,{href:"https://my.home-assistant.io/redirect/blueprint_import/?blueprint_url=https%3A%2F%2Fraw.githubusercontent.com%2Fdinki%2FView-Assist%2Frefs%2Fheads%2Fmain%2FView_Assist_custom_sentences%2Fcommunity_contributions%2FVACC_Extended_Device_Control-Display_and_Audio%2Fblueprint-vacc-extendeddevicecontrol.yaml",children:(0,n.jsx)(i.img,{src:"https://my.home-assistant.io/badges/blueprint_import.svg",alt:"Open your Home Assistant instance and show the blueprint import dialog with a specific blueprint pre-filled."})})}),"\n",(0,n.jsxs)(i.p,{children:["This blueprint enhances the control of View Assist device displays and audio playback. This is a community contribution with user Flight-Lab(Github)/flab (Discord) as the author.  Support can be obtained through the View Assist ",(0,n.jsx)(i.a,{href:"https://discord.com/channels/1241796965344481440/1295408431498395709",children:"Discord server"})," or the ",(0,n.jsx)(i.a,{href:"https://github.com/dinki/View-Assist/discussions",children:"discussion group"})," on Github.  Please tag the author in your message."]}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.admonition,{title:"Note",type:"info",children:(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Each device requires its own automation."}),"\n",(0,n.jsx)(i.li,{children:"Most features require modifications to the View Assist device configuration YAML file."}),"\n",(0,n.jsx)(i.li,{children:"All features are opt-in."}),"\n"]}),"\n"]})}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:"summary-of-optional-features",children:"Summary of Optional Features:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Automatically decrease music volume when triggered by wake-word detection or the broadcast automation, and restore\nmusic volume when TTS ends."}),"\n",(0,n.jsx)(i.li,{children:"Play a custom sound when wake word is detected."}),"\n",(0,n.jsx)(i.li,{children:"Play a custom sound when STT detects silence."}),"\n",(0,n.jsxs)(i.li,{children:["Switch to music mode when ",(0,n.jsx)(i.code,{children:"musicplayer_device"})," is playing."]}),"\n",(0,n.jsxs)(i.li,{children:["Revert to normal mode when ",(0,n.jsx)(i.code,{children:"musicplayer_device"})," is idle for specified duration."]}),"\n"]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Blueprint Input Page Screenshot:"}),(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{src:"https://github.com/user-attachments/assets/f0461fe4-73fe-4ef9-9c07-1859dd171ea1",alt:"VACC-EDC-1"})})]}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:"features-requiring-no-changes-to-stock-view-assist-device-configuration",children:"Features Requiring No Changes to Stock View Assist Device Configuration:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Assist Audio Feedback:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["Play a custom sound when wake word is detected (set Stream Assist ",(0,n.jsx)(i.code,{children:"STT start media"})," to ",(0,n.jsx)(i.code,{children:"null"})," if using this feature)."]}),"\n",(0,n.jsx)(i.li,{children:"Play a custom sound when STT detects silence (sound is not played if Music Duck is activated, as the volume returning to normal signals the end of listening)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:"features-requiring-configuration-changes",children:"Features Requiring Configuration Changes:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Home Assistant Startup:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Fully Kiosk Browser automatically loads the start URL on server startup."}),"\n",(0,n.jsxs)(i.li,{children:["Requires setting ",(0,n.jsx)(i.code,{children:"fkb_device:"})," in the config file, which should match the device name in the Fully Kiosk Browser integration.      (e.g., ",(0,n.jsx)(i.code,{children:'fkb_device: "pyramid"'}),")"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:"features-requiring-separate-media-players",children:"Features Requiring Separate Media Players:"}),"\n",(0,n.jsxs)(i.p,{children:["For the following features, separate media players must be defined for ",(0,n.jsx)(i.code,{children:"mediaplayer_device"})," and ",(0,n.jsx)(i.code,{children:"musicplayer_device"})," in the config:"]}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Auto Music Mode:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["Switches to music mode and navigates to the music view when ",(0,n.jsx)(i.code,{children:"musicplayer_device"})," starts playing. This applies even when playback starts from any sources other than just voice commands."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Music Mode Timeout:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Automatically returns to normal mode and the home page after a user-defined period of inactivity in music playback."}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Music Duck:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Lowers the music volume (by a user-defined percentage of the current volume) when triggered by a wake word or broadcast, and restores the original volume when TTS ends."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:["[!IMPORTANT]",(0,n.jsx)(i.br,{}),"\n","These features require stable and reliable state changes between idle and playing for both ",(0,n.jsx)(i.code,{children:"mediaplayer_device"})," and ",(0,n.jsx)(i.code,{children:"musicplayer_device"}),". Ensure that the media players are consistently available."]}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"recommended-media-players",children:"Recommended Media Players:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"musicplayer_device:"})," ",(0,n.jsx)(i.a,{href:"https://play.google.com/store/apps/details?id=de.badaix.snapcast&hl=en_US",children:"Snapcast"})," (exposed via Music Assistant) ",(0,n.jsx)(i.strong,{children:"FREE"})]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"mediaplayer_device:"})," ",(0,n.jsx)(i.a,{href:"https://play.google.com/store/apps/details?id=com.softmedia.receiver&hl=en_US",children:"AirReceiver"})," audio (exposed via Music Assistant) ",(0,n.jsx)(i.strong,{children:"$2.99"})]}),"\n"]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"AirReceiver Setup Instructions:"}),(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:["In AirReceiver settings, make sure both Airplay ",(0,n.jsx)("sub",{children:"IOS Media Receiver"})," and AirTunes Audio ",(0,n.jsx)("sub",{children:"AirPort Express Speaker"})," are selected. The media_player entity we want to use is only made when both of these are checked.",(0,n.jsx)(i.br,{}),"\n","(You do not need the other options selected for this but they will not harm anything if you choose to. I do, however, recommend unchecking them as they will create even more media player entities. One even creates a media server.)"]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:'Scroll down to "Advanced Settings" and set "AirTunes Audio Latency (ms)" to 0.'}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"Check AirTunes UI [\u2713]"}),"\n"]}),"\n"]}),(0,n.jsxs)(i.p,{children:["The media player entity we want to use will be created by the Music Assistant integration and will be called ",(0,n.jsx)(i.code,{children:"media_player.lenovostarview_(last 3 digits of device ip)_audio"}),(0,n.jsx)(i.br,{}),"\n","e.g. ",(0,n.jsx)(i.code,{children:"media_player.lenovostarview_180_audio"}),(0,n.jsx)(i.br,{}),"\n","This player operates independently of the device's system volume, similar to Snapcast."]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Other Confirmed Working Media Players:"}),(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.a,{href:"https://play.google.com/store/apps/details?id=de.ozerov.fully&hl=en_US",children:"Fully Kiosk Browser"})," media player (exposed via Music Assistant)","\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsx)(i.p,{children:"[!WARNING]\nOnly use the media player exposed by Music Assistant; others may become unavailable or fail to trigger actions."}),"\n"]}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"There may be a delay between state changes and actual audio playback (1-2 seconds for both start and end of playback)."}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.a,{href:"https://my.home-assistant.io/redirect/blueprint_import/?blueprint_url=https://gist.github.com/Flight-Lab/6ddb640f756791d59b6fd9be93375eee",children:(0,n.jsx)(i.img,{src:"https://my.home-assistant.io/badges/blueprint_import.svg",alt:"Open your Home Assistant instance and show the blueprint import dialog with a specific blueprint pre-filled."})})}),"\n",(0,n.jsx)(i.h2,{id:"changelog",children:"Changelog"}),"\n",(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"Version"}),(0,n.jsx)(i.th,{children:"Description"})]})}),(0,n.jsx)(i.tbody,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"v 1.0.0"}),(0,n.jsx)(i.td,{children:"Initial release"})]})})]})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,i,s)=>{s.d(i,{R:()=>o,x:()=>a});var n=s(6540);const t={},r=n.createContext(t);function o(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);